[package]
name = "purger"
version.workspace = true
edition.workspace = true
authors.workspace = true
license.workspace = true
repository.workspace = true
homepage.workspace = true
documentation.workspace = true
readme.workspace = true
keywords.workspace = true
categories.workspace = true
description = "A tool for cleaning Rust project build directories"

# 这个包作为工作空间根，不包含二进制文件
# 二进制文件由各自的子包提供：
# - purger-cli 提供 purger-cli 二进制文件
# - purger-gui 提供 purger-gui 二进制文件

[dependencies]
# Re-export core functionality
purger-core = { path = "purger-core" }

[dev-dependencies]
tempfile.workspace = true

[workspace]
members = [
    "purger-core",
    "purger-cli",
    "purger-gui"
]
resolver = "2"

[workspace.package]
version = "0.1.0"
edition = "2024"
authors = ["Mingzhen Zhuang <superfrankie621@gmail.com>"]
description = "A tool for cleaning Rust project build directories"
license = "MIT OR Apache-2.0"
repository = "https://github.com/Latias94/purger"
homepage = "https://github.com/Latias94/purger"
documentation = "https://docs.rs/purger"
readme = "README.md"
keywords = ["rust", "cargo", "clean", "build", "cli"]
categories = ["command-line-utilities", "development-tools"]

[workspace.dependencies]
anyhow = "1.0"
thiserror = "2.0"
serde = { version = "1.0", features = ["derive"] }
serde_json = "1.0"
toml = "0.9"
walkdir = "2.4"
ignore = "0.4"
tracing = "0.1"
tracing-subscriber = { version = "0.3", features = ["env-filter"] }
clap = { version = "4.0", features = ["derive"] }
eframe = "0.32"
egui = "0.32"
tokio = { version = "1.0", features = ["full"] }
rayon = "1.8"
tempfile = "3.8"
# GUI-specific dependencies
rfd = "0.15"
dirs = "6.0"
rust-i18n = "3.1"
sys-locale = "0.3"
# Development dependencies
criterion = { version = "0.7", features = ["html_reports"] }

# The profile that 'cargo dist build' will build with
[profile.dist]
inherits = "release"
lto = "thin"

# cargo-dist configuration
[workspace.metadata.dist]
# The preferred cargo-dist version to use in CI (Cargo.toml SemVer syntax)
cargo-dist-version = "0.28.0"
# CI backends to support
ci = "github"
# The installers to generate for each app
installers = ["shell", "powershell"]
# Target platforms to build apps for (Rust target-triple syntax)
targets = [
    "aarch64-apple-darwin",
    "x86_64-apple-darwin",
    "x86_64-unknown-linux-gnu",
    "x86_64-pc-windows-msvc"
]
# Publish jobs to run in CI
pr-run-mode = "plan"
# Allow dirty working directories
allow-dirty = ["ci"]
# Include all workspace binaries
include = ["purger-cli", "purger-gui"]
